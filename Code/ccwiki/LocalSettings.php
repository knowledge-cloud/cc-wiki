<?php
# This file was automatically generated by the MediaWiki 1.17.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.

# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings
# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;
$wgSitename      = "ccwiki";
$wgMetaNamespace = "Ccwiki";
## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "/ccwiki";
$wgScriptExtension  = ".php";
$wgServer = "http://10.214.0.147";
## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "$wgStylePath/common/images/wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEmergencyContact = "apache@10.214.29.234";
$wgPasswordSender   = "apache@10.214.29.234";

$wgEnotifUserTalk      = false; # UPO
$wgEnotifWatchlist     = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype           = "";
$wgDBserver         = "";
$wgDBname           = "";
$wgDBuser           = "";
$wgDBpassword       = "";
$wgDBadminuser           = "";
$wgDBadminpassword       = "";
# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=utf8";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType    = CACHE_NONE;
$wgMemCachedServers = array();
## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
#$wgEnableUploads  = false;
$wgEnableUploads  = true;
#$wgUseImageMagick = true;

#$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = false;
## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";
## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;
## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of ./languages/Language(.*).php
$wgLanguageCode = "en";

$wgSecretKey = "14bda5a82483f75fed39213856755cfc95276a5ea55e8ffc05006d6d6a6509d3";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "9d94afac86b0cffa";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook', 'vector':
#$wgDefaultSkin = "vector";
$wgDefaultSkin = "ccwiki";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
#$wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl  = "";
$wgRightsText = "";
$wgRightsIcon = "";
# $wgRightsCode = ""; # Not yet used
# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;

# End of automatically generated settings.
# Add more configuration options below.

error_reporting(E_ALL);
ini_set('display_errors', "on");

require_once( $IP."/extensions/EnhancedRetrieval/ccgroup.php" );
require_once( "$IP/extensions/Validator/Validator.php" );
require_once('deployment/Deployment.php');
include_once("$IP/extensions/SemanticMediaWiki/SemanticMediaWiki.php");
enableSemantics('localhost:8080');
#enableSemantics('');
require_once("extensions/ScriptManager/SM_Initialize.php");
include_once($IP.'/extensions/ARCLibrary/ARCLibrary.php');
require_once( "$IP/extensions/ApplicationProgramming/ParserFunctions/ParserFunctions.php" );
require_once( "$IP/extensions/ApplicationProgramming/Variables/Variables.php" );
include_once('extensions/ApplicationProgramming/URLArguments/URLArguments.php');
include_once('extensions/SMWHalo/includes/SMW_Initialize.php');
enableSMWHalo();


$wgUseAjax=true;
require_once("$IP/extensions/WYSIWYG/WYSIWYG.php");
$wgGroupPermissions['user']['annotate']=true;
$wgGroupPermissions['user']['edit']=true;
$wgGroupPermissions['user']['wysiwyg']=true;
$wgGroupPermissions['sysop']['userrights']=true;
$wgGroupPermissions['sysop']['ontologyediting'] = true;


$smwgNamespacesWithSemanticLinks = array(
NS_MAIN => true,
NS_TALK => false,
NS_USER => true,
NS_USER_TALK => false,
NS_PROJECT => true,
NS_PROJECT_TALK => false,
NS_IMAGE => true,
NS_IMAGE_TALK => false,
NS_MEDIAWIKI => true,
NS_MEDIAWIKI_TALK => false,
NS_TEMPLATE => true,
NS_TEMPLATE_TALK => false,
NS_HELP => true,
NS_HELP_TALK => false,
NS_CATEGORY => true,
NS_CATEGORY_TALK => false,
SMW_NS_PROPERTY => true,
SMW_NS_PROPERTY_TALK => false,
SMW_NS_TYPE => true,
SMW_NS_TYPE_TALK => false,
SMW_NS_CONCEPT => true,
SMW_NS_CONCEPT_TALK => false,
SF_NS_FORM => true,
SF_NS_FORM_TALK => false,
);
// auto-templates
$smwhgAutoTemplatesParameters = array ();
$smwhgAutoTemplates = array();
$smwhgAutoTemplateText = array( SMW_NS_PROPERTY => "");

$phpInterpreter="/usr/bin/php";

/*start-enhancedretrieval*/
require_once('extensions/EnhancedRetrieval/includes/EnhancedRetrieval.php');
/*end-enhancedretrieval*/

/*start-semanticforms*/
require_once('extensions/SemanticForms/SemanticForms.php');
/*end-semanticforms*/

/*start-automaticsemanticforms*/
require_once('extensions/AutomaticSemanticForms/includes/ASF_Initialize.php');
enableAutomaticSemanticForms(/*param-start-enableAutomaticSemanticForms*//*param-end-enableAutomaticSemanticForms*/);
/*end-automaticsemanticforms*/


/*start-semanticformsinputs*/
require_once('extensions/SemanticFormsInputs/SemanticFormsInputs.php');
/*end-semanticformsinputs*/
/*start-semanticgardening*/
require_once('extensions/SemanticGardening/includes/SGA_GardeningInitialize.php');
/*php-start-GardeningRights*/
// Gardening privileges for the WikiSysop
                $wgGroupPermissions['sysop']['gardening'] = true;
                #Enable upload of owl files
                $wgVerifyMimeType=false;
                array_push($wgFileExtensions, "owl");
                array_push($wgFileExtensions, "obl");
/*php-end-GardeningRights*/
$phpInterpreter = /*start-variable-phpInterpreter*/ '/usr/bin/php';/*end-variable-phpInterpreter*/
/*end-semanticgardening*/
/*start-semanticresultformats*/
require_once('extensions/SemanticResultFormats/SemanticResultFormats.php');
/*end-semanticresultformats*/
/*start-treeview*/
require_once('extensions/Treeview/includes/TV_Initialize.php');
enableTreeView(/*param-start-enableTreeView*//*param-end-enableTreeView*/);
/*end-treeview*
/*start-tsc*/
#$smwgHaloWebserviceEndpoint = /*start-variable-smwgHaloWebserviceEndpoint*/ 'localhost:8080';/*end-variable-smwgHaloWebserviceEndpoint*/
/*end-tsc*/
#$smwgHaloTripleStoreGraph='http://mywiki';
#$smwgHaloQuadMode=true;
#$smwgHaloTSCKnowsDBCredentials=true;
$wgDBport=3306;

/*start-nuke*/
require_once('extensions/Nuke/SpecialNuke.php');
/*end-nuke*/

/*start-maps*/
require_once('extensions/Maps/Maps.php');
/*end-maps*/

/*start-semanticmaps*/
require_once('extensions/SemanticMaps/SemanticMaps.php');
/*end-semanticmaps*/

/*mashupwiki start*/
require_once('extensions/mashupwiki/MashupWiki.php');
/*mashupwiki end*/
//include_once('extensions/ccgroup/ccSRF/ccSRF.php');

$wgShowExceptionDetails = true;

/*special page start*/
require_once("$IP/extensions/ccgroup/ccgroup.php");
/*special page end*/

$wgAllowExternalImages = true;

/*start-widgets*/
require_once('extensions/Widgets/Widgets.php');
/*php-start-group_permissions*/
$wgGroupPermissions['sysop']['editwidgets']=true;
/*php-end-group_permissions*/
/*end-widgets*/
