Index: extensions/SemanticForms/includes/SF_FormEditTab.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormEditTab.php	(revision 11973)
+++ extensions/SemanticForms/includes/SF_FormEditTab.php	(working copy)
@@ -145,8 +145,19 @@
 		}
 		if ( count( $form_names ) > 1 ) {
 			SFUtils::loadMessages();
-			$warning_text = "\t" . '<div class="warningMessage">' . wfMsg( 'sf_formedit_morethanoneform' ) . "</div>\n";
-			$wgOut->addHTML( $warning_text );
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|start*/
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Choose_form_for_several_default_forms*/
+			global $wgContLang;
+			$jsCode = "javascript:top.location.href=wgScript+'/"
+				.$wgContLang->getNsText(NS_SPECIAL)
+				.":FormEdit/'+this[selectedIndex].text+'/'+wgPageName; return false";
+			$selection = '<b>'.wfMsg('sf_several_forms_notice').'</b><br/>'
+				.wfMsg('sf_several_forms_label').'<select onchange="'.$jsCode.'">'."\n";
+			for ($i =0, $is=count($form_names); $i < $is; $i++)
+			$selection .= "<option>".$form_names[$i]."</option>\n";
+			$selection.="</select>\n";
+			$wgOut->addHTML( $selection );
+			/*op-patch|SR|2010-01-15|selection when several default forms exist|end*/
 		}
 		$form_name = $form_names[0];
 
Index: extensions/SemanticForms/includes/SF_FormLinker.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormLinker.php	(revision 11973)
+++ extensions/SemanticForms/includes/SF_FormLinker.php	(working copy)
@@ -292,7 +292,10 @@
 		// If this is not a category page, look for a default form
 		// for its parent category or categories.
 		$namespace = $title->getNamespace();
-		if ( NS_CATEGORY !== $namespace ) {
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|start*/
+		//if (NS_CATEGORY !== $namespace) {
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|end*/
+		
 			$default_forms = array();
 			$categories = SFUtils::getCategoriesForPage( $title );
 			foreach ( $categories as $category ) {
@@ -301,7 +304,10 @@
 			if ( count( $default_forms ) > 0 ) {
 				return $default_forms;
 			}
-		}
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|start*/
+		//}
+		/*op-patch|DH|2009-04-22|"edit with form"-tab for Categories|end*/
+			
 		// If we're still here, just return the default form for the
 		// namespace, which may well be null.
 		if ( NS_MAIN === $namespace ) {
Index: extensions/SemanticForms/includes/SF_FormPrinter.php
===================================================================
--- extensions/SemanticForms/includes/SF_FormPrinter.php	(revision 12233)
+++ extensions/SemanticForms/includes/SF_FormPrinter.php	(working copy)
@@ -279,7 +279,17 @@
 		$new_text = "";
 		// flag for placing "<onlyinclude>" tags in form output
 		$onlyinclude_free_text = false;
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Patch_free_text_in_includeonly_tags*/
+		$includeonly_free_text = false;
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
 		
+		/*op-patch|DH|2009-09-18|SF|include namespace for current user|start*/
+		global $wgContLang;
+		$namespace_labels = $wgContLang->getNamespaces();
+		$user_namespace = $namespace_labels[NS_USER];
+		/*op-patch|DH|2009-09-18|SF|include namespace for current user|end*/
+		
 		// If we have existing content and we're not in an active replacement
 		// situation, preserve the original content. We do this because we want
 		// to pass the original content on IF this is a partial form.
@@ -422,6 +432,10 @@
 		for ( $section_num = 0; $section_num < count( $form_def_sections ); $section_num++ ) {
 			$start_position = 0;
 			$template_text = "";
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+			$collapsible = false;
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
 			// the append is there to ensure that the original
 			// array doesn't get modified; is it necessary?
 			$section = " " . $form_def_sections[$section_num];
@@ -443,11 +457,21 @@
 					// Also replace periods with underlines, since that's what
 					// POST does to strings anyway.
 					$query_template_name = str_replace( '.', '_', $query_template_name );
+					/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+					/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+					$force_open = false;
+					/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
 					// Cycle through the other components.
 					for ( $i = 2; $i < count( $tag_components ); $i++ ) {
 						$component = $tag_components[$i];
 						if ( $component == 'multiple' ) $allow_multiple = true;
 						if ( $component == 'strict' ) $strict_parsing = true;
+						/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+						/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+						if ( $component == 'collapsible' ) {
+							$collapsible = true;
+						}
+						/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
 						$sub_components = array_map( 'trim', explode( '=', $component, 2 ) );
 						if ( count( $sub_components ) == 2 ) {
 							if ( $sub_components[0] == 'label' ) {
@@ -455,6 +479,14 @@
 							} elseif ( $sub_components[0] == 'add button text' ) {
 								$add_button_text = $sub_components[1];
 							}
+							/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+							/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+							elseif( $sub_components[0] == 'forceopen' ) {
+								if( $sub_components[1] && strtolower( $sub_components[1] == 'true' ) ) {
+									$force_open = true;
+								}
+							}
+							/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
 						}
 					}
 					// If this is the first instance, add the label into the form, if
@@ -463,7 +495,44 @@
 					if ( $old_template_name != $template_name ) {
 						if ( isset( $template_label ) ) {
 							$form_text .= "<fieldset>\n";
-							$form_text .= "<legend>$template_label</legend>\n";
+							/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+							/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+							// Add Javascript, curser style and sfgTabIndex for each legend
+							// content was:
+							// $form_text .= "<legend>$template_label</legend>\n";
+							// }
+							global $smwgRMActFormName, $sfgScriptPath;
+							//only if collapsible
+							if ( $collapsible ) {
+								#cookie processing
+								$cookie_json = in_array('CollapsingForm', array_keys($_COOKIE)) ? $_COOKIE['CollapsingForm'] : null;
+								if ($cookie_json)
+								$cookie_obj = json_decode($cookie_json,true);
+								if (isset($cookie_obj) && array_key_exists($smwgRMActFormName.'_sec_'.$section_num, $cookie_obj)) {
+									$cookie_open = $cookie_obj[$smwgRMActFormName.'_sec_'.$section_num];
+								} else {
+									$cookie_open = false;
+								}
+								if ( $force_open || $cookie_open ) {
+									$section_visibility ='';
+									$img = 'minus';
+								}
+								else {
+									$section_visibility = 'none';
+									$img = 'plus';
+								}
+								$form_text .= "<legend tabindex=\"$sfgTabIndex\" style=\"cursor: pointer;font-weight:bold;\"" .
+									"onKeyDown=\"javascript:if (event.keyCode == 32){ smwCollapsingForm.switchVisibilityWithImg('{$smwgRMActFormName}_sec_{$section_num}');}\"" .
+									"onClick=\"smwCollapsingForm.switchVisibilityWithImg('{$smwgRMActFormName}_sec_{$section_num}');\">" .
+									"<img id=\"{$smwgRMActFormName}_sec_{$section_num}_img\" onmouseout=\"(src='$sfgScriptPath/skins/$img.gif')\"" .
+									"onmouseover=\"(src='$sfgScriptPath/skins/$img-act.gif')\" src=\"$sfgScriptPath/skins/$img.gif\"/>&nbsp;$template_label</legend>\n";
+								$sfgTabIndex++;
+								#This DIV provides the functionality for collapsing forms
+								$form_text .= "<div id=\"{$smwgRMActFormName}_sec_".$section_num."\" style=\"display:".$section_visibility."\">";
+							} else {
+								$form_text .= "<legend>$template_label</legend>\n";
+							}
+							/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
 						}
 						if ($allow_multiple) {
 							$form_text .= "\t" . '<div class="multipleTemplateWrapper">' . "\n";
@@ -1089,10 +1158,13 @@
 								// if the date is hidden, cur_value will already be set
 								// to the default value
 								( $cur_value == '' || $cur_value == 'current user' ) ) {
-							if ( $input_type == 'text' || $input_type == '' ) {
-								$cur_value_in_template = $wgUser->getName();
+							/*op-patch|DH|2009-09-18|SF|include namespace for current user|start*/
+							if ($input_type == 'text' || $input_type == '' ||
+							$input_type == 'haloACtext' || $input_type == 'haloACtextarea') {
+								$cur_value_in_template = $user_namespace.":".$wgUser->getName();
 								$cur_value = $cur_value_in_template;
 							}
+							/*op-patch|DH|2009-09-18|SF|include namespace for current user|end*/
 						}
 						$new_text = $this->formFieldHTML( $form_field, $cur_value );
 
@@ -1215,9 +1287,16 @@
 							$form_is_partial = true;
 							// replacement pages may have minimal matches...
 							$source_page_matches_this_form = true;
-						} elseif ( $tag == 'includeonly free text' || $tag == 'onlyinclude free text' ) {
+						}
+						/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+						/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Patch_free_text_in_includeonly_tags*/
+						elseif($tag == 'includeonly free text') {
+							$includeonly_free_text = true;
+						}
+						elseif($tag == 'onlyinclude free text') {
 							$onlyinclude_free_text = true;
 						}
+						/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
 					}
 					$section = substr_replace( $section, '', $brackets_loc, $brackets_end_loc + 3 - $brackets_loc );
 				// =====================================================
@@ -1310,7 +1389,12 @@
 			} else {
 				$form_text .= $section;
 			}
-
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+			if( $collapsible ) {
+				$form_text .= "</div>"; //closing div for collapsing
+			}
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
 		} // end for
 
 		// if it wasn't included in the form definition, add the
@@ -1351,6 +1435,17 @@
 		} else {
 			$free_text = null;
 		}
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|start*/
+		if ( $includeonly_free_text ) {
+			$free_text = str_replace("<noinclude>",'', $free_text);
+			$free_text = str_replace("</noinclude>",'', $free_text);
+			$free_text = str_replace("<includeonly>",'', $free_text);
+			$free_text = str_replace("</includeonly>",'', $free_text);
+			$free_text = trim ($free_text);
+			$data_text = str_replace('!free_text!','</noinclude><includeonly>!free_text!</includeonly><noinclude>', $data_text);
+			$data_text = "<noinclude>".$data_text."</noinclude>";
+		}
+		/*op-patch|DH|2009-26-08|SF|free text in includeonly tags and rest in noinclude tags|end*/
 		if ( $onlyinclude_free_text ) {
 			// modify free text and data text to insert <onlyinclude> tags
 			$free_text = str_replace( "<onlyinclude>", '', $free_text );
Index: extensions/SemanticForms/includes/forminputs/SF_TextAreaInput.php
===================================================================
--- extensions/SemanticForms/includes/forminputs/SF_TextAreaInput.php	(revision 11974)
+++ extensions/SemanticForms/includes/forminputs/SF_TextAreaInput.php	(working copy)
@@ -87,6 +87,16 @@
 		if ( is_null( $cur_value ) ) {
 			$cur_value = '';
 		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+		// fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+		$known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+        'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property', 'rows', 'cols', 'autogrow' );
+		foreach (array_keys($other_args) as $key ) {
+			if ( $key && ! in_array($key, $known_other_args))
+			$textarea_attrs[$key] = $other_args[$key];
+		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
 		$text = Xml::element( 'textarea', $textarea_attrs, $cur_value, false );
 		$spanClass = 'inputSpan';
 		if ( $is_mandatory ) {
Index: extensions/SemanticForms/includes/forminputs/SF_TextAreaWithAutocompleteInput.php
===================================================================
--- extensions/SemanticForms/includes/forminputs/SF_TextAreaWithAutocompleteInput.php	(revision 11974)
+++ extensions/SemanticForms/includes/forminputs/SF_TextAreaWithAutocompleteInput.php	(working copy)
@@ -99,6 +99,16 @@
 		if ( is_null( $cur_value ) ) {
 			$cur_value = '';
 		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+		// fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+		$known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+        'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property', 'rows', 'cols', 'autogrow' );
+		foreach (array_keys($other_args) as $key ) {
+			if ( $key && ! in_array($key, $known_other_args))
+			$textarea_attrs[$key] = $other_args[$key];
+		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
 		$textarea_input = Xml::element( 'textarea', $textarea_attrs, $cur_value, false );
 		$text .= $textarea_input;
 
Index: extensions/SemanticForms/includes/forminputs/SF_TextInput.php
===================================================================
--- extensions/SemanticForms/includes/forminputs/SF_TextInput.php	(revision 11974)
+++ extensions/SemanticForms/includes/forminputs/SF_TextInput.php	(working copy)
@@ -126,6 +126,16 @@
 		if ( array_key_exists( 'maxlength', $other_args ) ) {
 			$inputAttrs['maxlength'] = $other_args['maxlength'];
 		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+		// fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+		$known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+		'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property' );
+		foreach (array_keys($other_args) as $key ) {
+			if ($key && !in_array($key, $known_other_args))
+			$inputAttrs[$key] = $other_args[$key];
+		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
 		$text = Xml::element( 'input', $inputAttrs );
 
 		if ( array_key_exists( 'is_uploadable', $other_args ) && $other_args['is_uploadable'] == true ) {
Index: extensions/SemanticForms/includes/forminputs/SF_TextWithAutocompleteInput.php
===================================================================
--- extensions/SemanticForms/includes/forminputs/SF_TextWithAutocompleteInput.php	(revision 11974)
+++ extensions/SemanticForms/includes/forminputs/SF_TextWithAutocompleteInput.php	(working copy)
@@ -177,6 +177,16 @@
 		if ( array_key_exists( 'maxlength', $other_args ) ) {
 			$inputAttrs['maxlength'] = $other_args['maxlength'];
 		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|start*/
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|doc|http://dmwiki.ontoprise.com:8888/dmwiki/index.php/Fix_other_args_bug*/
+		// fix bug http://smwforum.ontoprise.com/smwbugs/show_bug.cgi?id=13984
+		$known_other_args = array('class', 'field_type', 'size', 'maxlength', 'is_uploadable', 'possible_values',
+		'is_list', 'delimiter', 'autocomplete field type', 'value_labels', 'semantic_property' );
+		foreach (array_keys($other_args) as $key ) {
+			if ($key && !in_array($key, $known_other_args))
+			$inputAttrs[$key] = $other_args[$key];
+		}
+		/*op-patch|SR|2011-03-31|SF|Fix other_args bug|end*/
 		$text = "\n\t" . Xml::element( 'input', $inputAttrs ) . "\n";
 
 		if ( array_key_exists( 'is_uploadable', $other_args ) && $other_args['is_uploadable'] == true ) {
Index: extensions/SemanticForms/languages/SF_Messages.php
===================================================================
--- extensions/SemanticForms/languages/SF_Messages.php	(revision 11973)
+++ extensions/SemanticForms/languages/SF_Messages.php	(working copy)
@@ -17,6 +17,10 @@
  */
 $messages['en'] = array(
 	// user messages
+       /*op-patch|SR|2010-01-15|selection when several default forms exist|start*/
+       'sf_several_forms_notice'             => 'There is more than one form defined for this page. You can select another form to edit the page.',
+       'sf_several_forms_label'              => 'Select form: ',
+       /*op-patch|SR|2010-01-15|selection when several default forms exist|end*/
 	'semanticforms-desc'                 => 'Forms for adding and editing semantic data',
 	'specialpages-group-sf_group'        => 'Semantic Forms',
 	'createproperty'                     => 'Create a property',
Index: extensions/SemanticForms/specials/SF_FormEdit.php
===================================================================
--- extensions/SemanticForms/specials/SF_FormEdit.php	(revision 12233)
+++ extensions/SemanticForms/specials/SF_FormEdit.php	(working copy)
@@ -149,7 +149,12 @@
 		} elseif ( $target_name == '' && $page_name_formula == '' ) {
 			$text = Xml::element( 'p', array( 'class' => 'error' ), wfMsg( 'sf_formedit_badurl' ) ) . "\n";
 		} else {
-
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+			global $smwgRMActFormName;
+			$smwgRMActFormName = $form_name;
+			/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
+			
 			$save_page = $wgRequest->getCheck( 'wpSave' );
 			$preview_page = $wgRequest->getCheck( 'wpPreview' );
 			$diff_page = $wgRequest->getCheck( 'wpDiff' );
@@ -355,7 +360,6 @@
 				$text .= $form_text;
 			}
 		}
-
 		SFUtils::addJavascriptAndCSS();
 		if ( ! empty( $javascript_text ) ) {
 			$wgOut->addScript( '		<script type="text/javascript">' . "\n$javascript_text\n" . '</script>' . "\n" );
Index: extensions/SemanticForms/libs/SemanticForms.js
===================================================================
--- extensions/SemanticForms/libs/SemanticForms.js	(revision 12233)
+++ extensions/SemanticForms/libs/SemanticForms.js	(working copy)
@@ -900,3 +900,89 @@
 	});
 
 })(jQuery);
+
+/*op-patch|BL|2009-10-09|SF|CollapsingForms|start*/
+/*op-patch|BL|2009-10-09|SF|CollapsingForms|doc|http://dmwiki.ontoprise.com/dmwiki/index.php/CollapsingForms*/
+function CollapsingForm() {
+
+	this.closedContainers = {};
+
+	/**
+	 * Switch the visbility of the element with the given id.
+	 * 
+	 * @param: id 
+	 *		jquery selector string
+	 */
+	this.switchVisibilityWithImg = function( id ) {
+		var	openedimg = '',
+			closedimg = '',
+			visible,
+			jQId = '#' + id;
+
+		if( jQuery( jQId ).is( ':visible' ) ) {
+			visible = false;
+			closedimg = "<img id=\"" + id + "_img\" onmouseout=\"(src='"+
+				wgScriptPath + "/extensions/SemanticForms/skins/plus.gif')\" onmouseover=\"(src='"+
+				wgScriptPath + "/extensions/SemanticForms/skins/plus-act.gif')\" src=\""+
+				wgScriptPath + "/extensions/SemanticForms/skins/plus.gif\"/>";
+			jQuery( jQId + '_img' ).replaceWith( closedimg );
+		} else {
+			visible = true;
+			openedimg = "<img id=\"" + id + "_img\" onmouseout=\"(src='" +
+				wgScriptPath + "/extensions/SemanticForms/skins/minus.gif')\" onmouseover=\"(src='"+
+				wgScriptPath + "/extensions/SemanticForms/skins/minus-act.gif')\" src=\""+
+				wgScriptPath + "/extensions/SemanticForms/skins/minus.gif\"/>";
+			jQuery( jQId + '_img').replaceWith( openedimg )
+		}
+		jQuery( jQId ).toggle();
+		document.cookie = 'CollapsingForm' + "=" + 
+			'{"' + id + '" : ' + visible + '}';
+		this.closedContainers[id] = visible;
+	}
+
+	//-- cookie functions for collapsing forms -- //
+	// taken out of the generalTools.js from SMWHalo
+
+	/**
+	 * Returns the cookie value for the given key
+	 */
+	this.getCookie = function( name ) {
+		var value = null;
+		if( document.cookie !== '' ) {
+			var kk = document.cookie.indexOf( name + '=' );
+			if( kk >= 0 ) {
+				kk = kk + name.length+1;
+				var ll = document.cookie.indexOf( ';', kk );
+				if( ll < 0 ) {
+					ll = document.cookie.length;
+				}
+				value = document.cookie.substring( kk, ll );
+				value = unescape( value ); 
+			}
+		}
+		return value;
+	}
+
+	// set the cookie object
+	if( this.getCookie( 'CollapsingForm' ) ) {
+		this.closedContainers = this.getCookie( 'CollapsingForm' );
+	}
+}
+
+// Initialize Collapsing Form functions if page is loaded and preload
+jQuery( document ).ready(
+	function() {
+		window.smwCollapsingForm = new CollapsingForm();
+		// image preload
+		var preloadImages = new Array();
+		preloadImages.push( wgScriptPath + '/extensions/SemanticForms/skins/plus.gif' );
+		preloadImages.push( wgScriptPath + '/extensions/SemanticForms/skins/plus-act.gif' );
+		preloadImages.push( wgScriptPath + '/extensions/SemanticForms/skins/minus.gif' );
+		preloadImages.push( wgScriptPath + '/extensions/SemanticForms/skins/minus-act.gif' );
+		for ( i = 0; i < preloadImages.length; i++ ) {
+			var preloadImage = new Image();
+			preloadImage.src = preloadImages[i];
+		}
+	}
+);
+/*op-patch|BL|2009-10-09|SF|CollapsingForms|end*/
\ No newline at end of file
